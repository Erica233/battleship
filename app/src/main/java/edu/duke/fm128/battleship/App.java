/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.fm128.battleship;

import java.io.*;

import static java.lang.System.out;

public class App {
  private final TextPlayer player1;
  private final TextPlayer player2;

  /**
   * Constructs an App
   *
   * @param p1 player 1
   * @param p2 player 2
   */
  public App(TextPlayer p1, TextPlayer p2) {
    this.player1 = p1;
    this.player2 = p2;
  }

  /**
   * do the entire placement phase for both players
   *
   * @throws IOException
   */
  public void doPlacementPhase() throws IOException {
    player1.doPlacementPhase();
    player2.doPlacementPhase();
  }

  /**
   * let player1 play a turn, then see if player 2 has lost.
   * Then let player 2 play a turn and see if player 1 has lost.
   * It should repeat this until one player has lost, then report the outcome.
   *
   * @throws IOException
   */
  public void doAttackingPhase() throws IOException {
    TextPlayer currentPlayer = player1;
    TextPlayer otherPlayer = player2;
    while (true) {
      currentPlayer.playOneTurn(otherPlayer.getTheBoard(), otherPlayer.getView(), otherPlayer.getName());
      if (otherPlayer.isLose()) {
        // print the result
        out.print("Player " + currentPlayer.getName() + "wins!\n");
        break;
      }
      // swap current and other player for next time around loop
      TextPlayer temp = currentPlayer;
      currentPlayer = otherPlayer;
      otherPlayer = temp;
    }
  }

  public static void main(String[] args) throws IOException {
    InBoundsRuleChecker<Character> checker = new InBoundsRuleChecker<>(new NoCollisionRuleChecker<>(null));
    Board<Character> b1 = new BattleShipBoard<>(10, 20, checker, 'X');
    Board<Character> b2 = new BattleShipBoard<>(10, 20, checker, 'X');
    BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
    V1ShipFactory factory = new V1ShipFactory();

    TextPlayer p1 = new TextPlayer("A", b1, input, out, factory);
    TextPlayer p2 = new TextPlayer("B", b2, input, out, factory);

    App app = new App(p1, p2);
    app.doPlacementPhase();
    app.doAttackingPhase();
  }
}
